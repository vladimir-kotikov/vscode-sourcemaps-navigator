{
    "version": 3,
    "file": "extension.js",
    "sourceRoot": "",
    "sources": [
        "extension.ts"
    ],
    "names": [],
    "mappings": "AAAA,YAAY,CAAC;AAEb,iCAAiC;AACjC,mCAA+C;AAC/C,iDAA8C;AAC9C,qDAAkD;AAElD,IAAI,cAA8B,CAAC;AACnC,IAAI,eAA2B,CAAC;AAEhC,kBAAyB,OAAgC;IACrD,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;IACpF,cAAc,GAAG,IAAI,+BAAc,EAAE,CAAC;IACtC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;AAChE,CAAC;AAJD,4BAIC;AAED;IACI,cAAc,CAAC,qBAAqB,EAAE;SACrC,IAAI,CAAC,aAAa;QACf,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,cAAc,GAAG,2BAAY,CAAC,iBAAiB,EAAE,CAAC;QACxD,MAAM,CAAC,aAAa,CAAC,0BAA0B,EAAE;YAC7C,aAAa,CAAC,mBAAmB,CAAC,cAAc,CAAC;YACjD,aAAa,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;IAC3D,CAAC,CAAC;SACD,IAAI,CAAC,mBAAmB;QACrB,mBAAmB;YACf,qBAAqB,CAAC,mBAAmB,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,2CAA2C,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;AACP,CAAC;AAED,+BAA+B,WAAyB;IACpD,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC;SAClD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC;SACpC,IAAI,CAAC,MAAM;QACR,MAAM,CAAC,SAAS,GAAG,IAAI,kBAAS,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAC3D,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;AACP,CAAC",
    "sourcesContent": [
        "'use strict';\n\nimport * as vscode from 'vscode';\nimport { Disposable, Selection } from 'vscode';\nimport { FilePosition } from './filePosition';\nimport { SourceMapStore } from './sourceMapStore';\n\nlet sourceMapStore: SourceMapStore;\nlet navigateCommand: Disposable;\n\nexport function activate(context: vscode.ExtensionContext) {\n    navigateCommand = vscode.commands.registerCommand('smnavigator.navigate', navigate);\n    sourceMapStore = new SourceMapStore();\n    context.subscriptions.push(navigateCommand, sourceMapStore);\n}\n\nfunction navigate() {\n    sourceMapStore.getForCurrentDocument()\n    .then(sourceMapping => {\n        if (!sourceMapping) {\n            return null;\n        }\n\n        const activePosition = FilePosition.getActivePosition();\n        return sourceMapping.isCurrentDocumentGenerated() ?\n            sourceMapping.originalPositionFor(activePosition) :\n            sourceMapping.generatedPositionFor(activePosition);\n    })\n    .then(destinationPosition => {\n        destinationPosition ?\n            navigateToDestination(destinationPosition) :\n            vscode.window.showInformationMessage(`Can't get source map for current document`);\n    });\n}\n\nfunction navigateToDestination(destination: FilePosition): void {\n    vscode.workspace.openTextDocument(destination.file)\n    .then(vscode.window.showTextDocument)\n    .then(editor => {\n        editor.selection = new Selection(destination, destination);\n        editor.revealRange(editor.selection, vscode.TextEditorRevealType.InCenter);\n    });\n}\n"
    ]
}
